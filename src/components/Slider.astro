---
import { slugify } from '../utils/slugify';

const slides = [
{ 
  title: 'Sailtrack - Die Tracking App für Segler',
  images: [
    { src: 'images/mockups-sailtrack.png', alt: 'Sailtrack App' },
    { src: 'images/mockup-sailtrack-1.png', alt: 'Sailtrack App 1' },
    { src: 'images/mockup-sailtrack-2.png', alt: 'Sailtrack App 2' },
    { src: 'images/mockup-sailtrack-3.png', alt: 'Sailtrack App 3' },
  ],
  text: '<p>SailTrack ist ein eigenes Projekt. Diese native App zeichnet Routen auf dem Wasser auf. Mit SailTrack können Segler ihre Routen ganz einfach dokumentieren und analysieren, was ihnen hilft, effektiver zu navigieren.</p><p>Aktuell bekommt die App neue Features und ist noch im Umbau.',
},
{ 
  title: 'Craftomatic',
  images: [
    { src: 'images/mockups-craftomatic.png', alt: 'Craftomatic App' },
    { src: 'images/mockup-craftomatic-1.png', alt: 'Craftomatic App 1' },
    { src: 'images/mockup-craftomatic-2.png', alt: 'Craftomatic App 2' },
    { src: 'images/mockup-craftomatic-3.png', alt: 'Craftomatic App 3' },
  ],
  text: '<p>Diese Progressive Web App erfasst automatisch deine Zeit und generiert im Handumdrehen deine Arbeitsstunden. Es hat mir großen Spaß gemacht, diese smarte App für das Startup Craftomatic im Skeuomorphismus-Stil zu gestalten.</p><p>Wenn du noch auf der Suche nach der richtigen Zeiterfassungs-App bist, schau mal hier vorbei und optimiere deinen Arbeitstag!</p>'
  },
];

---
{((slides || [])).map((slide, index) => (
  <div class="slide">
    <div class="slides-container">
      <div class="slides-images" style={`${index % 2 === 0 ? "order: 0" : "order: 1"}`}>
        {slide.images.map((image) =>
          <img id={`slide-image-${slugify(image.alt)}`}  class="slide-image" src={image.src} alt={image.alt} />
        )}
      </div>
      <div class="slides-texts">
        <h3 class="slide-heading">{slide.title}</h3>
        <Fragment set:html={slide.text} />
      </div>
    </div>
  </div>
))}

<script>
  const options = {
    root: document.querySelector(".slides-images"),
    threshold: 0.5,
  };

  const callback = (entries: IntersectionObserverEntry[], observer: IntersectionObserver) => {
    entries.forEach((entry) => {
      const imageId = entry?.target.id;
      const splitted = imageId.split("slide-image");
      const textId = splitted[0] + "slide-text" + splitted[1];
      if (entry.isIntersecting) {
        entry.target.classList.add("active");
        document.getElementById(textId)?.classList.add("active");
      } else {
        entry.target.classList.remove("active");
        document.getElementById(textId)?.classList.remove("active");
      }
    });
  }

  const observer = new IntersectionObserver(callback, options);
  document.querySelectorAll(".slide-image")?.forEach((slide) => {
    observer.observe(slide);
  });
</script>

<style>
  .slide {
    margin-bottom: 10vh;
  }

  .slides-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  @media only screen and (min-width: 640px) {
    .slides-container {
      grid-template-columns: 300px 1fr;
    }
  }

  .slides-images {
    display:flex;
    overflow-x: scroll;
    width: 100%;
    scroll-snap-type: x mandatory;
  }

  .slide-image {
    scroll-snap-align: center;
    scroll-snap-stop: always;
    scroll-padding: 0 50%;
    width: 100%;
    object-fit: contain;
  }

  .slides-texts {
    color: var(--color-background);
    min-height: 220px;
  }

  .slide-heading {
    font-family: Oswald, system-ui, sans-serif;
    font-size: var(--font-lg);
    font-weight: 400;
    letter-spacing: 0;
    color: var(--color-primary);
  }

  #projects {
    padding-bottom: 10vh;
  }
</style>
